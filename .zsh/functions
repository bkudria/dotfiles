#! /bin/zsh -f

function precmd {
  HG_PROMPT=""
  (( ${+functions[vcs_info]} ))   && vcs_info
  #hg root &> /dev/null && (( ${+functions[hg_prompt]} ))  && hg_prompt
  (( ${+functions[zsh_prompt]} )) && zsh_prompt
}

function chpwd {
  [[ -t 1 ]] || return
  case $TERM in
	sun-cmd) print -Pn "\e]l%~\e\\"
	  ;;
	*xterm*|rxvt|(dt|k|E|e)term|eterm-color) print -Pn "\e]2;%~ | %M\a"
      ;;
  esac
}

expand-or-complete-prefix-with-dots() {
  echo -n '...'
  zle expand-or-complete-prefix
  zle redisplay
}


function qwhich {
    result=`which $@ 2> /dev/null`
    [[ $? == 0 ]] && echo $result
}

function alias_exists {
  name=$1
  value=$2
  command=$3
  [[ $command = "" ]] && command=$value
  if [[ -x `qwhich $command` ]]; then
	alias $name="$value"
  fi
}

function psg { ps aux | grep "[${1[1]}]${1[2,-1]}"; }

function c { echo "$*" | bc -l; }

function status {
    if [ -d ".svn" ]; then
	svn status
  elif [ -d ".git" ]; then
	git status
  elif [ -d ".hg" ]; then
	hg status
  fi
}

function chromeapp {
  google-chrome --enable-default-apps --app="$*"  &> /dev/null &
}

function gmail      {chromeapp "http://mail.google.com/a/kudria.net" }
#function greader    {chromeapp "http://google.com/reader" }
function gcal       {chromeapp "http://calendar.google.com/a/kudria.net" }
function ganalytics {chromeapp "http://analytics.google.com" }
function rmilk      {chromeapp "http://rememberthemilk.com" }
function tumblrdash {chromeapp "http://tumblr.com/dashboard" }
function twitter    {chromeapp "http://twitter.com" }
function simplenote {chromeapp "http://simple-note.appspot.com" }
function seesmic    {chromeapp "http://seesmic.com/web" }
#function           {chromeapp "http://" }


# wrapper around autoload, from http://ft.bewatermyfriend.org/comp/zsh/zshrc.real.html
function zrcautoload() {
  setopt local_options
  setopt extended_glob
  local fdir ffile
  local -i ffound
  ffile=${1}
  (( found = 0 ))
  for fdir in ${fpath} ; do
    [[ -e ${fdir}/${ffile} ]] && (( ffound = 1 )) && break
  done
  if (( ffound == 0 )) ; then
    zprintf 2 "  zrcautoload: cannot find %s\n" ${ffile}
    return 1
  fi
  zprintf 3 "  zrcautoload: loading %s\n" ${ffile}
  autoload -U ${ffile} || return 1
  return 0
}

function zprintf() {
    local -i level; local format
    level=$1 ; format=$2; shift; shift

    (( ZSHRC_VERBOSE < level )) && return 0

    printf '[%2d] '${format} ${level} "$@"
}
